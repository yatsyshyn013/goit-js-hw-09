{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,mBAChCE,OAAQH,SAASC,cAAc,kBAC/BG,SAAUJ,SAASC,cAAc,oBACjCI,UAAWL,SAASC,cAAc,WA6BpC,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAjCbV,EAAKC,OAAOiB,iBAAiB,UAG7B,SAAwBC,GACtBA,EAAIC,iBAEJ,IAAIC,EAAQC,OAAOtB,EAAKI,QAAQmB,OAC5BC,EAAOF,OAAOtB,EAAKK,OAAOkB,OAC1BE,EAASH,OAAOtB,EAAKM,SAASiB,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BlB,EAAckB,EAAGL,GACfM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACpBkB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEvEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MACpBkB,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoBvB,QAAiBC,MAAU,IAEvEW,GAASG,EAGXxB,EAAKC,OAAOgC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayEL: document.querySelector('[ name=\"delay\"]'),\n  stepEL: document.querySelector('[ name=\"step\"]'),\n  amountEL: document.querySelector('[ name=\"amount\"]'),\n  submitBtn: document.querySelector('button')\n};\n\n\n\nrefs.formEl.addEventListener('submit', onFormElSubmit);\n\n\nfunction onFormElSubmit(evt) {\n  evt.preventDefault();\n\n  let delay = Number(refs.delayEL.value);\n  let step = Number(refs.stepEL.value);\n  let amount = Number(refs.amountEL.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n     .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n    .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delay += step;\n    \n  }\n  refs.formEl.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  \n  });\n  \n}\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","delayEL","stepEL","amountEL","submitBtn","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.4c80cb9a.js.map"}